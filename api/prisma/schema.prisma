// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String  @id @default(uuid()) @db.Uuid
    email    String  @unique
    password String
    name     String
    orders   Order[]

    @@map("users")
}

model Category {
    id          String    @id @default(uuid()) @db.Uuid
    name        String
    description String?
    products    Product[]

    @@map("categories")
}

model Product {
    id          String      @id @default(uuid()) @db.Uuid
    name        String
    description String?
    price       String
    stock       Int
    categoryId  String?      @db.Uuid
    category    Category?    @relation(fields: [categoryId], references: [id], onDelete: SetNull)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    orderItems  OrderItem[]

    @@map("products")
}

model Customer {
    id     String  @id @default(uuid()) @db.Uuid
    name   String
    email  String  @unique
    phone  String?
    orders Order[]

    @@map("customers")
}

model Order {
    id         String      @id @default(uuid()) @db.Uuid
    customerId String      @db.Uuid
    customer   Customer    @relation(fields: [customerId], references: [id])
    total      String
    createdAt  DateTime    @default(now())
    updatedAt  DateTime    @updatedAt
    orderItems OrderItem[]
    user       User?       @relation(fields: [userId], references: [id])
    userId     String?     @db.Uuid

    @@map("orders")
}

model OrderItem {
    id        String  @id @default(uuid()) @db.Uuid
    orderId   String  @db.Uuid
    productId String  @db.Uuid
    order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
    product   Product @relation(fields: [productId], references: [id],  onDelete: Cascade)
    quantity  Int

    @@map("order_items")
}
